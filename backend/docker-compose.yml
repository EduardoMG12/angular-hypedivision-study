services:
  db:
    image: postgres:14-alpine 
    container_name: db_hype_division 
    restart: always 
    environment: 
      POSTGRES_USER: ${DB_USERNAME:-user}       
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}   
      POSTGRES_DB: ${DB_DATABASE:-hype_study_division} 
    ports:
      - "5432:5432" 
    volumes:
      - db-data:/var/lib/postgresql/data 
    healthcheck: 
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 3s
      retries: 5

  api:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: api_hype_division

    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: ${DB_PORT}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "3000:3000"
    volumes:
      
      - /app/node_modules
    command: >
      sh -c "pnpm start:dev"

volumes:
  db-data:
